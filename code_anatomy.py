# -*- coding: utf-8 -*-
"""code_anatomy.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1-tkpOY6ornkxN-wb5hQevTX4GsueyRtb

Here's the complete anatomy of the FastAPI route definition:
### **1. Decorator - `@app.get("/items/{item_id}")`**
```python
@app          # The FastAPI application instance
   .get(      # HTTP method decorator (GET, POST, etc.)
   "/items/{item_id}"  # URL path with {path_parameter}
)
```

- **`@app`**: References your `app = FastAPI()` instance
- **`.get()`**: Specifies this handles HTTP GET requests
- **Path Components**:
  - `/items/` → Static path segment
  - `{item_id}` → Path parameter (variable part)

### **2. Function Definition - `def get_item(item_id: int) -> dict:`**
```python
def           # Standard Python function
get_item      # Route handler name (can be any valid name)
(item_id: int)  # Path parameter with type hint
-> dict:      # Return type annotation
```

- **Parameter**:
  - `item_id` must match the path parameter name
  - `: int` enforces integer type conversion/validation
- **Return Type**:
  - `-> dict` documents the response will be a dictionary

### **3. Docstring - `'''Demonstrates path parameter type conversion'''`
```python
'''...'''  # Triple-quoted documentation string
```
- Appears in:
  - OpenAPI/Swagger UI docs
  - Automatic API documentation
  - IDE tooltips

### **4. Function Body - `return {"item_id": item_id}`**
```python
return        # Standard Python return
{"item_id": item_id}  # Response body (auto-converted to JSON)
```
- FastAPI automatically:
  - Converts Python dict → JSON
  - Sets `Content-Type: application/json`
  - Includes the response in OpenAPI docs

### **Full Technical Flow**
1. **Request Comes In**: `GET /items/42`
2. **Path Parsing**:
   - Extracts `"42"` from URL
   - Converts to integer (because of `: int`)
   - Rejects non-integer requests with 422 error
3. **Function Execution**:
   - Calls `get_item(42)`
   - Processes return value
4. **Response Creation**:
   - Converts dict to JSON
   - Returns HTTP 200 with JSON body

### **Key Features Demonstrated**
- **Type Conversion**: URL string → Python int
- **Validation**: Rejects non-integer values
- **Documentation**: Shows in `/docs` with parameter types
- **Serialization**: Automatic dict-to-JSON conversion

### **Visualization in Swagger UI**
```
GET /items/{item_id}
Parameters:
  • item_id (integer) [required]
Responses:
  200: {"item_id": 0}
  422: Validation Error (if non-integer provided)
```
"""

# app/01_path_parameters.py
"""
FASTAPI PATH PARAMETERS DEMO

Core Concepts Demonstrated:
1. Route definition with path parameters
2. Automatic type conversion and validation
3. Interactive API documentation
"""

# Import FastAPI - our main framework
from fastapi import FastAPI

# Create the FastAPI application instance
# This is the core of your API
app = FastAPI()

# Define a GET endpoint with a path parameter
# The {item_id} in the path is our dynamic parameter
@app.get("/items/{item_id}")
def get_item(item_id: int) -> dict:
    """
    Retrieve an item by its ID.

    Parameters:
    - item_id (int): The ID of the item to retrieve, automatically converted from URL string to integer

    Returns:
    - dict: A dictionary containing the item ID

    Raises:
    - HTTP 422: If item_id cannot be converted to an integer

    Example:
    - GET /items/42 → Returns {"item_id": 42}
    - GET /items/abc → Returns validation error (422)
    """
    # FastAPI automatically:
    # 1. Extracts item_id from the URL
    # 2. Converts it to an integer
    # 3. Validates it's a valid number
    return {"item_id": item_id}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("01_path_parameters:app", host="127.0.0.1", port=8001, reload=True)